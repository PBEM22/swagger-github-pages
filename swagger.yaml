---
openapi: 3.0.1
info:
  title: NVP-TEST API
  description: 배구 포지션 테스트 api명세서입니다.
  version: v1
servers:
- url: https://nvp.kr
  description: Generated server url
tags:
- name: 질문지 컨트롤러
  description: 질문지 컨트롤러입니다.
- name: 결과값(포지션) 컨트롤러
  description: 결과값(포지션) 컨트롤러입니다.
- name: 관리자 컨트롤러
  description: 관리자용 컨트롤러입니다.
- name: 방명록 컨트롤러
  description: 방명록 컨트롤러입니다.
paths:
  "/v1/admins/questions":
    get:
      tags:
      - 관리자 컨트롤러
      summary: "[관리자] 전체 질문 불러오기"
      description: '전체 질문을 불러옵니다. <반환 값>: 질문고유번호(resultId), 질문내용(resultInfo), 해당 문제에
        대한 답변들 List[ 답변고유번호(answerId), 답변내용(answerInfo), 답변별포지션번호(resultId), 포지션명(result)
        ]들을 반환합니다.'
      operationId: getQuestions
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseListQuestionWithAnswersRes"
    put:
      tags:
      - 관리자 컨트롤러
      summary: "[관리자] 질문지 수정"
      description: 질문지를 수정할 수 있습니다. <요청 값>
      operationId: updateQuestion
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateQuestionReq"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseObject"
    post:
      tags:
      - 관리자 컨트롤러
      summary: "[관리자] 질문 생성"
      description: '질문을 생성합니다. (최대 10개) <요청 값>: 질문내용(questionInfo), 답변지들 List[ 답변내용(answer),
        포지션고유번호(resultId) ]를 입력받습니다.'
      operationId: createQuestion
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateQuestionReq"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseObject"
  "/v1/visitors/hit":
    post:
      tags:
      - 방문자 컨트롤러
      summary: 사이트 방문
      description: 사이트 방문 시 현재 방문자 수 및 증가 불러오기 기능입니다.
      operationId: hitVisitor
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseObject"
  "/v1/results/my":
    post:
      tags:
      - 결과값(포지션) 컨트롤러
      summary: 내 결과 확인
      description: 내 테스트 결과 및 전체 포지션별 count 확인이 가능합니다.
      operationId: myResult
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MyResultReq"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseMyResultRes"
  "/v1/questbooks":
    get:
      tags:
      - 방명록 컨트롤러
      summary: 방명록 전체 조회
      description: 방명록 전체를 조회합니다. (페이지네이션)
      operationId: getAllGuestBooks
      parameters:
      - name: cursor
        in: query
        description: 마지막 Id, 없으면 처음부터 가져옴
        required: false
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: 가져올 크기
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseListGuestBookRes"
    post:
      tags:
      - 방명록 컨트롤러
      summary: 방명록 작성
      description: 방명록을 작성하는 기능입니다.
      operationId: createGuestBook
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateGuestBookReq"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseLong"
  "/v1/admins/login":
    post:
      tags:
      - 관리자 컨트롤러
      summary: "[관리자] 로그인"
      description: 관리자 로그인, Id와 PW를 입력받고 반환값은 null 입니다.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AdminLoginReq"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseObject"
  "/v1/results":
    get:
      tags:
      - 결과값(포지션) 컨트롤러
      summary: 결과 전체 조회
      description: 어떤 결과(포지션)들이 있는지 전체 조회할 수 있습니다.
      operationId: getResults
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseListResultRes"
  "/v1/results/{id}":
    get:
      tags:
      - 결과값(포지션) 컨트롤러
      summary: 결과 조회
      description: 해당하는 결과를 조회할 수 있습니다. (불필요한것 같음)
      operationId: getResult
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseResultRes"
  "/v1/questions":
    get:
      tags:
      - 질문지 컨트롤러
      summary: 전체 질문 불러오기
      description: 전체 질문을 불러옵니다.
      operationId: getQuestions_1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseListQuestionWithAnswersRes"
  "/v1/questbooks/search":
    get:
      tags:
      - 방명록 컨트롤러
      summary: 방명록 검색
      description: 제목 또는 내용, 닉네임과 일치하는 내용을 검색합니다.
      operationId: searchGuestBooks
      parameters:
      - name: keyword
        in: query
        required: true
        schema:
          type: string
      - name: cursor
        in: query
        description: 마지막 Id, 없으면 처음부터 가져옴
        required: false
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: 가져올 크기
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseListGuestBookRes"
  "/v1/admins/search":
    get:
      tags:
      - 관리자 컨트롤러
      summary: "[관리자] 방명록 검색"
      description: 제목 또는 내용, 닉네임과 일치하는 내용을 검색합니다.
      operationId: searchGuestBooks_1
      parameters:
      - name: keyword
        in: query
        required: true
        schema:
          type: string
      - name: cursor
        in: query
        description: 마지막 ID, 없으면 처음부터 가져옴
        required: false
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: 가져올 크기
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseListGuestBookRes"
  "/v1/admins/results":
    get:
      tags:
      - 관리자 컨트롤러
      summary: "[관리자] 전체 결과 확인하기"
      description: 지금껏 실행되었던 전체 결과들 확인이 가능합니다.
      operationId: getResults_1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseResultStatusAllRes"
  "/v1/admins/guestbooks":
    get:
      tags:
      - 관리자 컨트롤러
      summary: "[관리자] 방명록 전체 조회"
      description: 방명록 전체 조회 기능입니다.
      operationId: getGuestBooks
      parameters:
      - name: cursor
        in: query
        description: 마지막 ID, 없으면 처음부터 가져옴
        required: false
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: 가져올 크기
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseListGuestBookRes"
  "/v1/questbooks/{guestBookId}":
    delete:
      tags:
      - 방명록 컨트롤러
      summary: 방명록 삭제
      description: 방명록을 삭제하는 기능입니다. 비밀번호가 일치해야합니다.
      operationId: deleteGuestBook
      parameters:
      - name: guestBookId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: password
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseObject"
  "/v1/admins/questions/{id}":
    delete:
      tags:
      - 관리자 컨트롤러
      summary: "[관리자] 질문지 삭제"
      description: 질문지를 삭제할 수 있습니다.
      operationId: deleteQuestion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseObject"
  "/v1/admins/logout":
    delete:
      tags:
      - 관리자 컨트롤러
      summary: "[관리자] 로그아웃"
      description: 요청값은 없습니다. 로그아웃 및 세션을 삭제합니다.
      operationId: logout
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseObject"
  "/v1/admins/guestbooks/{guestBookId}":
    delete:
      tags:
      - 관리자 컨트롤러
      summary: "[관리자] 방명록 삭제"
      description: guestBookId 기반으로 방명록을 삭제한다.
      operationId: deleteGuestBook_1
      parameters:
      - name: guestBookId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseObject"
components:
  schemas:
    UpdateAnswerReq:
      type: object
      properties:
        answerId:
          type: integer
          description: 답변 고유 번호
          format: int64
          example: 4
        answer:
          type: string
          description: 답변 내용
          example: 세터
        resultId:
          type: integer
          description: 결과(포지션) 고유 번호
          format: int64
          example: 3
      description: 답변목록
    UpdateQuestionReq:
      type: object
      properties:
        questionId:
          type: integer
          description: 질문 고유 번호
          format: int64
          example: 1
        questionInfo:
          type: string
          description: 질문 내용
          example: 가장 싫어하는 포지션은?
        answers:
          type: array
          description: 답변목록
          items:
            "$ref": "#/components/schemas/UpdateAnswerReq"
    ApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
        error:
          "$ref": "#/components/schemas/ExceptionDTO"
    ExceptionDTO:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    MyResultReq:
      type: object
      properties:
        position:
          type: object
          additionalProperties:
            type: integer
            description: '포지션별 answer 선택 갯수 (예: LEFT, SETTER, CENTER, LIBERO'
            format: int32
          description: '포지션별 answer 선택 갯수 (예: LEFT, SETTER, CENTER, LIBERO'
          example:
            LEFT: 2
            SETTER: 1
            CENTER: 3
            LIBERO: 4
    ApiResponseMyResultRes:
      type: object
      properties:
        success:
          type: boolean
        data:
          "$ref": "#/components/schemas/MyResultRes"
        error:
          "$ref": "#/components/schemas/ExceptionDTO"
    MyResultRes:
      type: object
      properties:
        resultId:
          type: integer
          description: 결과(포지션) 고유번호
          format: int64
          example: 2
        result:
          type: string
          description: 결과(포지션)명
          example: CENTER
        resultKo:
          type: string
          description: 결과(포지션)명 한글
          example: 센터
        resultModifier:
          type: string
          description: 결과(포지션) 수식어
          example: 철벽과 빠른 공격
        resultInfo:
          type: string
          description: 결과(포지션) 설명
          example: 미들블로커라고도 불리는 센터는 ~~
        resultStatus:
          type: array
          description: 포지션별 [count / 전체] 퍼센테이지(%) 결과 리스트. 각 항목은 포지션명, 한글명, 비율을 포함합니다.
          example:
          - resultStatusId: 1
            resultStatusName: LEFT
            resultStatusKo: 레프트
            resultStatusPer: 25
          - resultStatusId: 2
            resultStatusName: SETTER
            resultStatusKo: 세터
            resultStatusPer: 25
          items:
            "$ref": "#/components/schemas/ResultStatusRes"
    ResultStatusRes:
      type: object
      properties:
        resultStatusId:
          type: integer
          description: 결과(포지션) 고유번호
          format: int64
          example: 3
        resultStatusName:
          type: string
          description: 결과(포지션)명
          example: LEFT
        resultStatusKo:
          type: string
          description: 결과(포지션)명 한글
          example: 레프트
        resultStatusPer:
          type: integer
          description: 결과(포지션)별 비율 (count / 전체, 정수) %
          format: int32
          example: 37
    CreateGuestBookReq:
      required:
      - guestBookInfo
      - guestBookPassword
      type: object
      properties:
        guestBookNickname:
          maxLength: 10
          minLength: 0
          pattern: "^(?!.*[\\u3131-\\u318E])^[a-zA-Z0-9]+$"
          type: string
          description: 닉네임(익명ID)
          example: 개구리123
        guestBookPassword:
          maxLength: 8
          minLength: 4
          type: string
          description: 비밀번호
          example: '123512'
        guestBookInfo:
          maxLength: 70
          minLength: 4
          type: string
          description: 방명록 내용
          example: 다들 화이팅!!
    ApiResponseLong:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: integer
          format: int64
        error:
          "$ref": "#/components/schemas/ExceptionDTO"
    AnswerReq:
      type: object
      properties:
        answer:
          type: string
          description: 답변 내용
          example: 레프트
        resultId:
          type: integer
          description: 결과(포지션) 고유 번호
          format: int64
          example: 1
      description: 답변목록
    CreateQuestionReq:
      type: object
      properties:
        questionInfo:
          type: string
          description: 질문 내용
          example: 가장 좋아하는 포지션은?
        answers:
          type: array
          description: 답변목록
          items:
            "$ref": "#/components/schemas/AnswerReq"
    AdminLoginReq:
      type: object
      properties:
        id:
          type: string
          description: 관리자 ID
          example: admin
        password:
          type: string
          description: 관리자 PW
          example: password312
    ApiResponseListResultRes:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            "$ref": "#/components/schemas/ResultRes"
        error:
          "$ref": "#/components/schemas/ExceptionDTO"
    ResultRes:
      type: object
      properties:
        resultId:
          type: integer
          description: 결과(포지션) 고유번호
          format: int64
          example: 3
        result:
          type: string
          description: 결과(포지션)명
          example: LEFT
        resultKo:
          type: string
          description: 결과(포지션)명 한글
          example: 레프트
        resultModifier:
          type: string
          description: 결과(포지션) 수식어
          example: 폭발적인 공격수
        resultInfo:
          type: string
          description: 결과(포지션) 설명
          example: 폭발적인 에너지로 팀의 에이스 ~~~
    ApiResponseResultRes:
      type: object
      properties:
        success:
          type: boolean
        data:
          "$ref": "#/components/schemas/ResultRes"
        error:
          "$ref": "#/components/schemas/ExceptionDTO"
    AnswerRes:
      type: object
      properties:
        answerId:
          type: integer
          description: 답변 고유번호
          format: int64
          example: 4
        answer:
          type: string
          description: 답변 내용
          example: 침대에 누워있을 때
        resultId:
          type: integer
          description: 결과(포지션) 고유번호
          format: int64
          example: 2
        result:
          type: string
          description: 결과(포지션)명
          example: LIBERO
      description: 답변목록
    ApiResponseListQuestionWithAnswersRes:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            "$ref": "#/components/schemas/QuestionWithAnswersRes"
        error:
          "$ref": "#/components/schemas/ExceptionDTO"
    QuestionWithAnswersRes:
      type: object
      properties:
        questionId:
          type: integer
          description: 질문 고유번호
          format: int64
          example: 1
        questionInfo:
          type: string
          description: 질문 내용
          example: 나는 언제 가장 행복한가?
        answers:
          type: array
          description: 답변목록
          items:
            "$ref": "#/components/schemas/AnswerRes"
    ApiResponseListGuestBookRes:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            "$ref": "#/components/schemas/GuestBookRes"
        error:
          "$ref": "#/components/schemas/ExceptionDTO"
    GuestBookRes:
      type: object
      properties:
        guestBookId:
          type: integer
          description: 방명록 고유번호
          format: int64
          example: 2
        guestBookNickname:
          type: string
          description: 방명록 닉네임
          example: 개구리
        guestBookInfo:
          type: string
          description: 방명록 내용
          example: 어디에나 있고, 어디에나 없는 채류니
        createdAt:
          type: string
          description: 작성시간
          format: date-time
    ApiResponseResultStatusAllRes:
      type: object
      properties:
        success:
          type: boolean
        data:
          "$ref": "#/components/schemas/ResultStatusAllRes"
        error:
          "$ref": "#/components/schemas/ExceptionDTO"
    ResultStatusAllRes:
      type: object
      properties:
        total:
          type: integer
          description: 테스트를 한 모든 인원
          format: int32
          example: 128
        resultStatus:
          type: object
          additionalProperties:
            type: integer
            description: '포지션별 [count / 전체] 퍼센테이지(%) (예: LEFT, SETTER, CENTER, LIBERO'
            format: int32
          description: '포지션별 [count / 전체] 퍼센테이지(%) (예: LEFT, SETTER, CENTER, LIBERO'
          example:
            LEFT: 25
            SETTER: 25
            CENTER: 50
            LIBERO: 0
